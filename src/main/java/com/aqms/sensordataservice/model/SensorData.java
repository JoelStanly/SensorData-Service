package com.aqms.sensordataservice.model;

import java.math.BigDecimal;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.aqms.sensordataservice.FileUtil;

import jakarta.validation.constraints.DecimalMax;
import jakarta.validation.constraints.DecimalMin;
import jakarta.validation.constraints.Positive;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.ToString;

//POJO of the Sensor Stream/ Data
@Data
@AllArgsConstructor
@NoArgsConstructor
@ToString
@Builder
@DynamoDBTable(tableName = "SensorData")
public class SensorData {
	@DynamoDBHashKey(attributeName = "dataId")
	@DynamoDBAutoGeneratedKey
	private String dataId;
	
	@DynamoDBAttribute
	private String sensorid;
	
	@DynamoDBAttribute
	@DecimalMin(value= FileUtil.minO2)
	@DecimalMax(value=FileUtil.maxO2)
	private BigDecimal o2;
	
	@DynamoDBAttribute
	@DecimalMin(value= FileUtil.minCO2)
	@DecimalMax(value=FileUtil.maxCO2)
	private BigDecimal co2;
	
	@DynamoDBAttribute
	@DecimalMin(value= FileUtil.minSO2)
	@DecimalMax(value=FileUtil.maxSO2)
	private BigDecimal so2;
	
	@DynamoDBAttribute
	@DecimalMin(value= FileUtil.minCO)
	@DecimalMax(value=FileUtil.maxCO)
	private BigDecimal co;
	
	@DynamoDBAttribute
	@DecimalMin(value= FileUtil.minC)
	@DecimalMax(value=FileUtil.maxC)
	private BigDecimal c;
	
	@DynamoDBAttribute
	private BigDecimal safeValue;
	
	@DynamoDBAttribute
	private Boolean safety;


}
